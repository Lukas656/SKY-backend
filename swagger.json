{
    "openapi": "3.0.0",
    "info": {
        "title": "API User",
        "description": "Esta API é uma Basica consulta de Read,Create,Update e Delete de um banco de Usuários",
        "contact": {
            "email": "lucassantosnacs.21@gmail.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:5000/",
            "description": "API de test"
        }
    ],
    "paths": {
        "/SignUp": {
            "post": {
                "summary": "Entrar com seus dados para gerar seu Token de acesso",
                "description": "Essa rota é responsavel por criar um token para permitir as outras requisições",
                "tags": [
                    "authorization"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Users"
                            },
                            "examples": {
                                "User": {
                                    "value": {
                                        "nome": "exemple nome",
                                        "email": "emailExemplo123@g.com",
                                        "senha": "senhaExemplo123",
                                        "telefones": [{
                                            "numero": "00000-0000",
                                            "ddd": "00"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Menssagem: Não Foi possivel criar este usuário!"
                    },
                    "403": {
                        "description": "E-mail já Existente!"
                    },
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/SigIn":{
            "post": {
                "summary": "Entrar com Email e Senha",
                "description": "Essa rota é responsavel por pegar email e senha e validar se o token ainda é valido para permitir as outras requisições",
                "tags": [
                    "authorization"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Users"
                            },
                            "examples": {
                                "User": {
                                    "value": {
                                        "email": "emailExemplo123@g.com",
                                        "senha": "senhaExemplo123"
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "Menssagem: Não Foi possivel logar"
                    },
                    "401": {
                        "description": "Usuário e/ou senha inválidos"
                    },
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/{id}":{
            "get": {
                "summary": "Busca ID",
                "description": "Pega um unico Usuario pelo seu ID, (Não se esqueça de validar o Token)",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Usuario para busca",
                        "required": true
                    }
                ],
                "responses": {
                    "401": {
                        "description": "Não autorizado!"
                    },
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "summary": "Atualizar User",
                "description": "Esta rota é responsavel por Atualizar Usuario , (Não se esqueça de validar o Token)",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Usuario para busca",
                        "required": true
                    }
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Users"
                            },
                            "examples": {
                                "User": {
                                    "value": {
                                        "nome": "exemple nome",                            
                                        "senha": "senhaExemplo123",
                                        "telefones": [{
                                            "numero": "00000-0000",
                                            "ddd": "00"
                                        }]
                                    }
                                }
                            }
                        }
                    }
                },
                "responses": {
                    "400": {
                        "description": "menssagem: Não Foi possivel Atualizar este usuário"
                    },
                    "401": {
                        "description": "Não Autorizado"
                    },
                    "200": {
                        "description": "ok",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            },
            "delete": {
                "summary": "Deleta User",
                "description": "Esta rota é responsavel por deletar um Usuario, (Não se esqueça de validar o Token)",
                "tags": [
                    "User"
                ],
                "security": [
                    {
                        "bearerAuth": []
                    }
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID do Usuario para busca",
                        "required": true
                    }
                ],
                "responses": {
                    "400": {
                        "description": "menssagem: Não Foi possivel deletar este usuário"
                    },
                    "401": {
                        "description": "Não Autorizado"
                    },
                    "403": {
                        "description": "E-mail já Existente!"
                    },                    
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object",
                                    "$ref": "#/components/schemas/Users"
                                }
                            }
                        }
                    }
                }
            }
           
        }
        
    },
    "components": {
        "schemas": {
            "Users": {
                "type": "object",
                "properties": {
                    "nome": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "senha": {
                        "type": "string"
                    },
                    "telefones":{
                        "type": "array"
                    }
                }
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}